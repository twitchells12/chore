{"version":3,"sources":["constants/projectConstants.js","constants/userConstants.js","store.js","reducers/projectReducers.js","reducers/userReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Project.js","actions/projectActions.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","screens/ProjectDetail.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","screens/ProjectListScreen.js","screens/ProjectEditScreen.js","screens/UserEditScreen.js","assests/gir.png","assests/st_logo.png","screens/LandingScreen.js","screens/Dashboard.js","App.js","index.js"],"names":["PROJECT_LIST_REQUEST","PROJECT_LIST_SUCCESS","PROJECT_LIST_FAIL","PROJECT_LIST_RESET","PROJECT_DETAIL_REQUEST","PROJECT_DETAIL_SUCCESS","PROJECT_DETAIL_FAIL","PROJECT_DELETE_REQUEST","PROJECT_DELETE_SUCCESS","PROJECT_DELETE_FAIL","PROJECT_CREATE_REQUEST","PROJECT_CREATE_SUCCESS","PROJECT_CREATE_FAIL","PROJECT_CREATE_RESET","PROJECT_UPDATE_REQUEST","PROJECT_UPDATE_SUCCESS","PROJECT_UPDATE_FAIL","PROJECT_UPDATE_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","projectList","state","projects","action","type","loading","payload","error","users","projectDetail","project","projectDelete","success","projectCreate","projectUpdate","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","userDelete","userUpdate","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","className","inline","Control","placeholder","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","Container","to","Nav","Link","NavDropdown","title","name","Item","onClick","removeItem","isAdmin","Project","Card","Body","_id","Title","as","Subtitle","due_date","Text","description","status","listProjects","listProjectDetail","Message","children","show","setShow","useEffect","setTimeout","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","HomeScreen","search","console","log","Row","map","Col","sm","md","lg","xl","ProjectDetail","match","setAvatar","params","avatar","ListGroup","project_name","workers","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","split","post","username","setItem","stringify","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","src","put","updateUserProfile","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","Table","href","color","ProjectListScreen","successCreate","createdProject","deleteProject","employee","lat","lon","created_at","completed_on","customer","ProjectEditScreen","projectId","setTitle","setDescription","setLat","setLon","dueDate","setDueDate","setStatus","completedDate","setCompletedDate","loadingUpdate","errorUpdate","successUpdate","Number","dueDateUpdate","moment","format","updateProject","UserEditScreen","userId","setIsAdmin","updateUser","Check","label","checked","LandingScreen","Dashboard","vals","values","labels","layout","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.744d10f7.chunk.js","sourcesContent":["export const PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST';\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS';\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL';\nexport const PROJECT_LIST_RESET = 'PROJECT_LIST_RESET';\nexport const PROJECT_DETAIL_REQUEST = 'PROJECT_DETAIL_REQUEST';\nexport const PROJECT_DETAIL_SUCCESS = 'PROJECT_DETAIL_SUCCESS';\nexport const PROJECT_DETAIL_FAIL = 'PROJECT_DETAIL_FAIL';\nexport const PROJECT_DELETE_REQUEST = 'PROJECT_DELETE_REQUEST';\nexport const PROJECT_DELETE_SUCCESS = 'PROJECT_DELETE_SUCCESS';\nexport const PROJECT_DELETE_FAIL = 'PROJECT_DELETE_FAIL';\nexport const PROJECT_CREATE_REQUEST = 'PROJECT_CREATE_REQUEST';\nexport const PROJECT_CREATE_SUCCESS = 'PROJECT_CREATE_SUCCESS';\nexport const PROJECT_CREATE_FAIL = 'PROJECT_CREATE_FAIL';\nexport const PROJECT_CREATE_RESET = 'PROJECT_CREATE_RESET';\nexport const PROJECT_UPDATE_REQUEST = 'PROJECT_UPDATE_REQUEST';\nexport const PROJECT_UPDATE_SUCCESS = 'PROJECT_UPDATE_SUCCESS';\nexport const PROJECT_UPDATE_FAIL = 'PROJECT_UPDATE_FAIL';\nexport const PROJECT_UPDATE_RESET = 'PROJECT_UPDATE_RESET';\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  projectListReducer,\n  projectDetailReducer,\n  projectDeleteReducer,\n  projectCreateReducer,\n  projectUpdateReducer,\n} from './reducers/projectReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers';\n\nconst reducer = combineReducers({\n  projectList: projectListReducer,\n  projectDetail: projectDetailReducer,\n  projectDelete: projectDeleteReducer,\n  projectCreate: projectCreateReducer,\n  projectUpdate: projectUpdateReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PROJECT_LIST_FAIL,\n  PROJECT_LIST_REQUEST,\n  PROJECT_LIST_SUCCESS,\n  PROJECT_LIST_RESET,\n  PROJECT_DETAIL_FAIL,\n  PROJECT_DETAIL_REQUEST,\n  PROJECT_DETAIL_SUCCESS,\n  PROJECT_DELETE_FAIL,\n  PROJECT_DELETE_REQUEST,\n  PROJECT_DELETE_SUCCESS,\n  PROJECT_CREATE_REQUEST,\n  PROJECT_CREATE_SUCCESS,\n  PROJECT_CREATE_FAIL,\n  PROJECT_CREATE_RESET,\n  PROJECT_UPDATE_REQUEST,\n  PROJECT_UPDATE_SUCCESS,\n  PROJECT_UPDATE_FAIL,\n  PROJECT_UPDATE_RESET,\n} from '../constants/projectConstants';\n\nexport const projectListReducer = (state = { projects: [] }, action) => {\n  switch (action.type) {\n    case PROJECT_LIST_REQUEST:\n      return { loading: true, projects: [] };\n    case PROJECT_LIST_SUCCESS:\n      return { loading: false, projects: action.payload };\n    case PROJECT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case PROJECT_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const projectDetailReducer = (state = { project: {} }, action) => {\n  switch (action.type) {\n    case PROJECT_DETAIL_REQUEST:\n      return { loading: true, ...state };\n    case PROJECT_DETAIL_SUCCESS:\n      return { loading: false, project: action.payload };\n    case PROJECT_DETAIL_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const projectDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PROJECT_DELETE_REQUEST:\n      return { loading: true };\n    case PROJECT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PROJECT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const projectCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PROJECT_CREATE_REQUEST:\n      return { loading: true };\n    case PROJECT_CREATE_SUCCESS:\n      return { loading: false, success: true, project: action.payload };\n    case PROJECT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PROJECT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const projectUpdateReducer = (state = { project: {} }, action) => {\n  switch (action.type) {\n    case PROJECT_UPDATE_REQUEST:\n      return { loading: true };\n    case PROJECT_UPDATE_SUCCESS:\n      return { loading: false, success: true, project: action.payload };\n    case PROJECT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PROJECT_UPDATE_RESET:\n      return { project: {} };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_RESET,\n  USER_UPDATE_PROFILE_SUCCESS,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = { projects: [] }, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_PROFILE_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n","import React, { useState } from 'react';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nfunction SearchBox() {\n  const [keyword, setKeyword] = useState('');\n\n  let history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword) {\n      history.push(`/?keyword=${keyword}`);\n    } else {\n      history.push(history.push(history.location.pathname));\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} className=\"d-flex\" inline>\n      <Form.Control\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        onChange={(e) => setKeyword(e.target.value)}\n      />\n      <Button variant=\"outline-success\" className=\"mt-0\">\n        Search\n      </Button>\n    </Form>\n  );\n}\n\nexport default SearchBox;\n","import axios from 'axios';\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_RESET,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login/',\n      { username: email, password: password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('userDetails');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/register/',\n      { name: name, email: email, password: password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}/`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/profile/update/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/update/${user._id}/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      // payload: data,\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport SearchBox from './SearchBox';\nimport { logout } from '../actions/userActions';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Navbar>\n      <Container>\n        <LinkContainer to=\"/\">\n          <h3>Chore</h3>\n        </LinkContainer>\n        <SearchBox />\n        <LinkContainer to=\"/dashboard\">\n          <Nav.Link>Dashboard</Nav.Link>\n        </LinkContainer>\n        <Nav className=\"ml-auto\">\n          {userInfo ? (\n            <NavDropdown\n              title={<div className=\"pull-left\">{userInfo.name}</div>}\n              id=\"firstName\"\n            >\n              <LinkContainer to=\"/profile\">\n                <NavDropdown.Item>Profile</NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/login\">\n                <NavDropdown.Item onClick={logoutHandler}>\n                  Logout\n                </NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          ) : (\n            [\n              <LinkContainer to=\"/login\">\n                <Nav.Link>\n                  <i className=\"fas fa-user\"></i> Login\n                </Nav.Link>\n              </LinkContainer>,\n              <LinkContainer to=\"/register\">\n                <Nav.Link>\n                  <i className=\"fas fa-user-plus\"></i> Register\n                </Nav.Link>\n              </LinkContainer>,\n            ]\n          )}\n          {userInfo && userInfo.isAdmin && (\n            <NavDropdown title=\"Admin\" id=\"nav-dropdown\">\n              <LinkContainer to=\"/admin/userlist\">\n                <NavDropdown.Item>Users</NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/admin/projectlist\">\n                <NavDropdown.Item>Projects</NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/admin/teamlist\">\n                <NavDropdown.Item>Teams</NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          )}\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\n\nconst Project = ({ project }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Card.Header className=\"card_dropdown\">\n        <i className=\"fas fa-ellipsis-h\"></i>\n      </Card.Header>\n      <Card.Body className=\"card_body\">\n        <Link to={`/project/${project._id}`}>\n          <Card.Title as=\"div\">\n            <strong>\n              {project._id} {project.title}\n            </strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Subtitle className=\"card_subtitle\">\n          <i className=\"fas fa-flag flag\"></i> Due {project.due_date}\n        </Card.Subtitle>\n        <Card.Text as=\"div\">\n          <div className=\"my-3 desc\">{project.description}</div>\n        </Card.Text>\n        <Card.Text>{project.status}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Project;\n","import {\n  PROJECT_DETAIL_FAIL,\n  PROJECT_DETAIL_REQUEST,\n  PROJECT_DETAIL_SUCCESS,\n  PROJECT_DELETE_FAIL,\n  PROJECT_DELETE_REQUEST,\n  PROJECT_DELETE_SUCCESS,\n  PROJECT_LIST_FAIL,\n  PROJECT_LIST_REQUEST,\n  PROJECT_LIST_SUCCESS,\n  PROJECT_CREATE_FAIL,\n  PROJECT_CREATE_REQUEST,\n  PROJECT_CREATE_SUCCESS,\n  PROJECT_UPDATE_FAIL,\n  PROJECT_UPDATE_REQUEST,\n  PROJECT_UPDATE_SUCCESS,\n} from '../constants/projectConstants';\nimport axios from 'axios';\n\nexport const listProjects =\n  (keyword = '') =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PROJECT_LIST_REQUEST });\n\n      const { data } = await axios.get(`/api/projects${keyword}`);\n      dispatch({ type: PROJECT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: PROJECT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listProjectDetail = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PROJECT_DETAIL_REQUEST });\n\n    const { data } = await axios.get(`/api/projects/${id}`);\n    dispatch({ type: PROJECT_DETAIL_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DETAIL_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/projects/delete/${id}/`, config);\n\n    dispatch({\n      type: PROJECT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProject = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/projects/create/`, {}, config);\n\n    dispatch({\n      type: PROJECT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProject = (project) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/projects/update/${project._id}/`,\n      project,\n      config\n    );\n\n    dispatch({\n      type: PROJECT_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: PROJECT_DETAIL_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, children }) => {\n  const [show, setShow] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShow(false);\n    }, 3000);\n  }, []);\n  return (\n    <Alert variant={variant} show={show}>\n      {children}\n    </Alert>\n  );\n};\n\nMessage.defaultProps = {\n  variant: 'info',\n};\n\nexport default Message;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className=\"sr-only\">Loading</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Col, Row } from 'react-bootstrap';\nimport Project from '../components/Project';\nimport { listProjects } from '../actions/projectActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n\nconst HomeScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const projectList = useSelector((state) => state.projectList);\n  const { loading, error, projects } = projectList;\n\n  let keyword = history.location.search;\n  console.log(keyword);\n  useEffect(() => {\n    dispatch(listProjects(keyword));\n  }, [dispatch, keyword]);\n\n  return (\n    <>\n      <h4>Projects</h4>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          {projects.map((project) => (\n            <Col sm={12} md={6} lg={4} xl={3}>\n              <Project key={project._id} project={project} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup } from 'react-bootstrap';\nimport { listProjectDetail } from '../actions/projectActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n\nconst ProjectDetail = ({ match }) => {\n  const dispatch = useDispatch();\n  const [avatar, setAvatar] = useState('');\n\n  const projectDetail = useSelector((state) => state.projectDetail);\n  const { loading, error, project } = projectDetail;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const user = userDetails;\n\n  useEffect(() => {\n    dispatch(listProjectDetail(match.params.id));\n    setAvatar(user.avatar);\n  }, [match, dispatch]);\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <Col>\n            <ListGroup variant=\"flush\" key={project._id}>\n              <ListGroup.Item>\n                <h3>{project.project_name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                Description: {project.description}\n              </ListGroup.Item>\n              <ListGroup.Item>Status: {project.status}</ListGroup.Item>\n              <ListGroup.Item>Workers: {project.workers}</ListGroup.Item>\n            </ListGroup>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default ProjectDetail;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"string\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"string\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          New User?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions';\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Register</h1>\n\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"string\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            required\n            type=\"string\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type=\"string\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type=\"string\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setAvatar(user.avatar);\n      }\n    }\n  }, [history, userInfo, dispatch, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name,\n          email,\n          password,\n        })\n      );\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>{name}'s Profile</h1>\n      <img src={avatar} width=\"30px\" height=\"30px\" />\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {success && <Message variant=\"success\">Profile Updated</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"string\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"string\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"string\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"string\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Update\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listUsers, deleteUser } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, successDelete, history, userInfo]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id));\n      console.log('delete user');\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Admin</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default UserListScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {\n  listProjects,\n  deleteProject,\n  createProject,\n} from '../actions/projectActions';\nimport { PROJECT_CREATE_RESET } from '../constants/projectConstants';\n\nconst ProjectListScreen = ({ history, match }) => {\n  const dispatch = useDispatch();\n\n  const projectList = useSelector((state) => state.projectList);\n  const { loading, error, projects } = projectList;\n\n  const projectDelete = useSelector((state) => state.projectDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = projectDelete;\n\n  const projectCreate = useSelector((state) => state.projectCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    project: createdProject,\n  } = projectCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: PROJECT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push('/login');\n    }\n\n    if (successCreate) {\n      history.push(`/admin/project/${createdProject._id}/edit`);\n    } else {\n      dispatch(listProjects());\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    match,\n    successDelete,\n    successCreate,\n    createdProject,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure you want to delete this project?')) {\n      dispatch(deleteProject(id));\n      console.log('delete project');\n    }\n  };\n\n  const createProjectHandler = () => {\n    dispatch(createProject());\n  };\n\n  return (\n    <Container>\n      <h1>Projects</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Assignee</th>\n              <th>Description</th>\n              <th>Lat</th>\n              <th>Long</th>\n              <th>Start Date</th>\n              <th>Due Date</th>\n              <th>Status</th>\n              <th>Completed Date</th>\n              <th>Customer</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {projects.map((project) => (\n              <tr key={project._id}>\n                <td>{project._id}</td>\n                <td>{project.title}</td>\n                <td>{project.employee}</td>\n                <td>{project.description}</td>\n                <td>{project.lat}</td>\n                <td>{project.lon}</td>\n                <td>{project.created_at}</td>\n                <td>{project.due_date}</td>\n                <td>{project.status}</td>\n                <td>{project.completed_on}</td>\n                <td>{project.customer}</td>\n                <td>\n                  <LinkContainer to={`/admin/project/${project._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(project._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </Container>\n  );\n};\n\nexport default ProjectListScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProjectDetail, updateProject } from '../actions/projectActions';\nimport { PROJECT_UPDATE_RESET } from '../constants/projectConstants';\nimport moment from 'moment';\n\nconst ProjectEditScreen = ({ match, history }) => {\n  const projectId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [lat, setLat] = useState('');\n  const [lon, setLon] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [status, setStatus] = useState('');\n  const [completedDate, setCompletedDate] = useState('');\n\n  const dispatch = useDispatch();\n\n  const projectDetail = useSelector((state) => state.projectDetail);\n  const { loading, error, project } = projectDetail;\n\n  const projectUpdate = useSelector((state) => state.projectUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = projectUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PROJECT_UPDATE_RESET });\n      history.push('/admin/projectlist');\n    } else {\n      if (!project.title || project._id !== Number(projectId)) {\n        dispatch(listProjectDetail(projectId));\n      } else {\n        setTitle(project.title);\n        setDescription(project.description);\n        setLat(project.lat);\n        setLon(project.lon);\n        setDueDate(project.due_date);\n        setStatus(project.status);\n        setCompletedDate(project.completed_on);\n      }\n    }\n  }, [dispatch, projectId, history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const dueDateUpdate = moment(dueDate).format('YYYY-MM-DD');\n    console.log(typeof dueDateUpdate);\n    dispatch(\n      updateProject({\n        _id: projectId,\n        title,\n        description,\n        lat,\n        lon,\n        dueDate,\n        status,\n        completedDate,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Link className=\"btn btn-light my-3\" to=\"/admin/projectlist\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Project</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"Name\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"Description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"Description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"lat\">\n              <Form.Label>Lat</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"lat\"\n                value={lat}\n                onChange={(e) => setLat(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"lon\">\n              <Form.Label>Lon</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"Lon\"\n                value={lon}\n                onChange={(e) => setLon(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"dueDate\">\n              <Form.Label>Due Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"Due Date\"\n                value={dueDate}\n                onChange={(e) => setDueDate(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"Status\">\n              <Form.Label>Status</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"Status\"\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"CompletedDate\">\n              <Form.Label>Completed Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"Completed Date\"\n                value={completedDate}\n                onChange={(e) => setCompletedDate(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default ProjectEditScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, user, userId, history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUser({ _id: user._id, name, email, isAdmin, password }));\n    }\n  };\n\n  return (\n    <div>\n      <Link className=\"btn btn-light my-3\" to=\"/admin/userlist\">\n        Go Back\n      </Link>\n      {loadingUpdate && <Loader />}\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <FormContainer>\n          <h1>Edit User</h1>\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isAdmin\">\n              <Form.Label>Is Admin</Form.Label>\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"confirmPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"string\"\n                placeholder=\"Confirm Password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        </FormContainer>\n      )}\n    </div>\n  );\n};\n\nexport default UserEditScreen;\n","export default __webpack_public_path__ + \"static/media/gir.59dc6555.png\";","export default __webpack_public_path__ + \"static/media/st_logo.c0a31713.png\";","import React, { useState, useEffect } from 'react';\nimport gir from '../assests/gir.png';\nimport logo from '../assests/st_logo.png';\n\nfunction LandingScreen() {\n  const [isMouseInside, setIsMouseInside] = useState(false);\n  const [isLeft, setIsLeft] = useState(false);\n  const [isRight, setIsRight] = useState(false);\n\n  useEffect(() => {}, [isLeft, isRight]);\n\n  const mouseLeft = () => {\n    setIsLeft(true);\n    setIsMouseInside(true);\n  };\n  const mouseRight = () => {\n    setIsRight(true);\n    setIsMouseInside(true);\n  };\n\n  return (\n    <div\n      className={`land-wrapper ${\n        isLeft & isMouseInside\n          ? ' hover-left '\n          : isRight & isMouseInside\n          ? ' hover-right'\n          : ''\n      }`}\n    >\n      <div\n        onMouseEnter={mouseLeft}\n        onMouseLeave={() => setIsMouseInside(false) & setIsLeft(false)}\n        className=\"left\"\n      >\n        <img src={gir} className=\"limg\" />\n        <h1 className=\"lh1\">Employees</h1>\n        <a href=\"#\" className=\"lbtn\">\n          Login\n        </a>\n      </div>\n      <div\n        onMouseEnter={mouseRight}\n        onMouseLeave={() => setIsMouseInside(false) & setIsRight(false)}\n        className=\"right\"\n      >\n        <img src={logo} className=\"limg\" />\n        <h1 className=\"lh1\">Customers</h1>\n        <a href=\"#\" className=\"lbtn\">\n          Login\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingScreen;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Plot from 'react-plotly.js';\nimport { listProjects } from '../actions/projectActions';\n\nfunction Dashboard() {\n  const dispatch = useDispatch();\n\n  const projectList = useSelector((state) => state.projectList);\n  const { loading, error, projects } = projectList;\n\n  useEffect(() => {\n    dispatch(listProjects());\n  }, [dispatch]);\n\n  const vals = projects.map((project) => project.customer);\n  console.log(vals);\n  var data = [\n    {\n      values: [],\n      labels: ['Residential', 'Non-Residential', 'Utility'],\n      type: 'pie',\n    },\n  ];\n\n  var layout = {\n    height: 400,\n    width: 500,\n  };\n  return (\n    <div>\n      <Plot data={data} layout={layout} />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\n\nimport HomeScreen from './screens/HomeScreen';\nimport ProjectDetail from './screens/ProjectDetail';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport ProjectListScreen from './screens/ProjectListScreen';\nimport ProjectEditScreen from './screens/ProjectEditScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport LandingScreen from './screens/LandingScreen';\nimport Dashboard from './screens/Dashboard';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n        <Route path=\"/project/:id\" component={ProjectDetail} />\n\n        <Route path=\"/admin/userlist\" component={UserListScreen} />\n        <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n\n        <Route path=\"/admin/projectlist\" component={ProjectListScreen} />\n        <Route path=\"/admin/project/:id/edit\" component={ProjectEditScreen} />\n\n        <Route path=\"/\" component={HomeScreen} exact />\n        <Route path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport './bootstrap.min.css';\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}